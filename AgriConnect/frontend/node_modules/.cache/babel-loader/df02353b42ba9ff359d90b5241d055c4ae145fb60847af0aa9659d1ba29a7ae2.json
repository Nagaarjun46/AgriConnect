{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Sales Management System\\\\frontend\\\\src\\\\components\\\\sellerCreditCard.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SellerCreditCard({\n  seller\n}) {\n  _s();\n  const [inputAmount, setInputAmount] = useState('');\n  const [notification, setNotification] = useState('');\n  const [paidAmount, setPaidAmount] = useState(seller.paidAmount);\n  const [date, setDate] = useState(\"\");\n  const credit = seller.totalAmount - paidAmount;\n  function handleChange(e) {\n    setInputAmount(parseInt(e.target.value));\n  }\n  function updateAmount() {\n    if (!inputAmount || isNaN(inputAmount)) {\n      setNotification(\"Please enter a valid amount.\");\n      setTimeout(() => setNotification(''), 3000);\n      return;\n    }\n    fetch(`${process.env.REACT_APP_API_URI}/sellers/pay/${seller._id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        detail: \"Payment Received\",\n        date: date,\n        amount: inputAmount\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error('Failed to update');\n      return res.json();\n    }).then(data => {\n      setNotification(\"Amount updated successfully!\");\n      setPaidAmount(data.paidAmount);\n      setInputAmount('');\n      setTimeout(() => setNotification(''), 3000);\n    }).catch(err => {\n      setNotification(\"Failed to update.\");\n      setTimeout(() => setNotification(''), 3000);\n    });\n  }\n  function updateDate(e) {\n    const temp = e.target.value;\n    const [year, month, day] = temp.split(\"-\");\n    const reversedDate = `${day}-${month}-${year}`;\n    setDate(reversedDate);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seller-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/sellerPaymentDetail/${seller._id}`,\n          className: \"link\",\n          children: seller.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/sellerPaymentDetail/${seller._id}`,\n          className: \"link\",\n          children: seller.place\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credit-display\",\n        children: [\"Current Credit: \\u20B9\", credit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credit-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter amount paid\",\n          value: inputAmount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: updateDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateAmount,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SellerCreditCard, \"j4X+NLxmbxuh+uPz1v2weG+227k=\");\n_c = SellerCreditCard;\nvar _c;\n$RefreshReg$(_c, \"SellerCreditCard\");","map":{"version":3,"names":["useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","SellerCreditCard","seller","_s","inputAmount","setInputAmount","notification","setNotification","paidAmount","setPaidAmount","date","setDate","credit","totalAmount","handleChange","e","parseInt","target","value","updateAmount","isNaN","setTimeout","fetch","process","env","REACT_APP_API_URI","_id","method","body","JSON","stringify","detail","amount","headers","then","res","ok","Error","json","data","catch","err","updateDate","temp","year","month","day","split","reversedDate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","name","toUpperCase","place","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/projects/Sales Management System/frontend/src/components/sellerCreditCard.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SellerCreditCard({ seller }) {\r\n    const [inputAmount, setInputAmount] = useState('');\r\n    const [notification, setNotification] = useState('');\r\n    const [paidAmount, setPaidAmount] = useState(seller.paidAmount);\r\n    const [date,setDate] = useState(\"\");\r\n\r\n    const credit = seller.totalAmount - paidAmount;\r\n\r\n    function handleChange(e) {\r\n        setInputAmount(parseInt(e.target.value));\r\n    }\r\n\r\n    function updateAmount() {\r\n        if (!inputAmount || isNaN(inputAmount)) {\r\n            setNotification(\"Please enter a valid amount.\");\r\n            setTimeout(() => setNotification(''), 3000);\r\n            return;\r\n        }\r\n\r\n        fetch(`${process.env.REACT_APP_API_URI}/sellers/pay/${seller._id}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({ detail : \"Payment Received\",\r\n                date : date,\r\n                amount: inputAmount }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) throw new Error('Failed to update');\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setNotification(\"Amount updated successfully!\");\r\n            setPaidAmount(data.paidAmount);\r\n            setInputAmount('');\r\n            setTimeout(() => setNotification(''), 3000);\r\n        })\r\n        .catch(err => {\r\n            setNotification(\"Failed to update.\");\r\n            setTimeout(() => setNotification(''), 3000);\r\n        });\r\n    }\r\n    function updateDate(e){\r\n        const temp=e.target.value;\r\n        const [year, month, day] = temp.split(\"-\");\r\n        const reversedDate = `${day}-${month}-${year}`;\r\n        setDate(reversedDate);\r\n    }\r\n    return (\r\n        <>\r\n        {notification && (\r\n            <div className=\"top-notification\">\r\n                {notification}\r\n            </div>\r\n        )}\r\n        <div className=\"seller-card\">\r\n            <div>\r\n                <Link to={`/sellerPaymentDetail/${seller._id}`} className='link'>\r\n                    {seller.name.toUpperCase()}\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <Link to={`/sellerPaymentDetail/${seller._id}`} className='link'>\r\n                    {seller.place}\r\n                </Link>\r\n            </div>\r\n            <div className=\"credit-display\">\r\n                Current Credit: â‚¹{credit}\r\n            </div>\r\n            <div className=\"credit-section\">\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Enter amount paid\"\r\n                    value={inputAmount}\r\n                    onChange={handleChange}\r\n                />\r\n                <input type=\"date\" onChange={updateDate}/>\r\n                <button onClick={updateAmount}>Update</button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}