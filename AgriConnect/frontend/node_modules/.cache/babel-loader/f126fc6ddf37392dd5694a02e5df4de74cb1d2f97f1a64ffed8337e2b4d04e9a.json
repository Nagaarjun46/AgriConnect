{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Sales Management System\\\\frontend\\\\src\\\\pages\\\\farmerBilling.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FarmerBilling() {\n  _s();\n  const [rows, setRows] = useState([{\n    price: \"\",\n    quantity: \"\"\n  }]);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [advance, setAdvance] = useState(0);\n  const [billDetails, setBillDetails] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  let totalAmount = 0;\n  const addRow = () => {\n    setRows([...rows, {\n      price: \"\",\n      quantity: \"\"\n    }]);\n  };\n  const handleInputChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index][field] = value;\n    setRows(updatedRows);\n  };\n  function updateDate(e) {\n    const temp = e.target.value;\n    const [year, month, day] = temp.split(\"-\");\n    const reversedDate = `${day}-${month}-${year}`;\n    setDate(reversedDate);\n  }\n  const generateBill = () => {\n    let labourWages = 5 * totalQuantity;\n    const calculatedRows = rows.map(({\n      price,\n      quantity\n    }) => {\n      const priceNum = parseFloat(price) || 0;\n      const quantityNum = parseFloat(quantity) || 0;\n      const total = priceNum * quantityNum;\n      totalAmount += total;\n      return {\n        price: priceNum,\n        quantity: quantityNum,\n        total\n      };\n    });\n    const commission = Math.floor(totalAmount / 10);\n    const remaining = totalAmount - (commission + labourWages + advance);\n    setBillDetails({\n      rows: calculatedRows,\n      totalAmount,\n      commission,\n      labourWages,\n      remaining\n    });\n  };\n  function updateDatabase() {\n    const rate = billDetails.rows.map(row => parseInt(row.price, 10));\n    const quantity = billDetails.rows.map(row => parseInt(row.quantity, 10));\n    const amount = totalAmount;\n    fetch(`${process.env.REACT_APP_API_URI}/sellers/pay/${seller._id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        name,\n        place,\n        date,\n        amount,\n        quantity,\n        rate,\n        totalQuantity,\n        advance\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error('Failed to update');\n      return res.json();\n    }).then(data => {\n      setNotification(\"Amount updated successfully!\");\n      setTimeout(() => setNotification(''), 3000);\n    }).catch(err => {\n      setNotification(\"Failed to update.\");\n      setTimeout(() => setNotification(''), 3000);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n            body {\n            font-family: 'Segoe UI', sans-serif;\n            background-color: #f1f8e9; /* Soft green background */\n            margin: 0;\n            padding: 2rem;\n          }\n\n          h1 {\n            text-align: center;\n            color: #33691e; /* Dark green for the main header */\n            margin-bottom: 2rem;\n          }\n\n          .form-section {\n            max-width: 800px;\n            background: white;\n            padding: 2rem;\n            margin: auto;\n            margin-bottom: 2rem;\n            border-radius: 10px; /* Rounded edges */\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1); /* Subtle shadow effect */\n          }\n\n          label {\n            display: block;\n            margin: 1rem 0 0.3rem;\n            font-weight: bold;\n            color: #333; /* Dark text for labels */\n          }\n\n          input[type=\"text\"],\n          input[type=\"number\"],\n          input[type=\"date\"] {\n            width: 100%;\n            padding: 0.6rem;\n            margin-top: 5px;\n            border-radius: 5px; /* Rounded edges for inputs */\n            border: 1px solid #ccc; /* Neutral border color */\n            font-size: 1rem;\n          }\n\n          .price-rows {\n            margin-top: 1rem;\n          }\n\n          .price-rows div {\n            display: flex;\n            gap: 1rem;\n            margin-bottom: 1rem;\n          }\n\n          .price-rows input {\n            flex: 1;\n            padding: 0.6rem;\n            border-radius: 5px; /* Rounded edges for inputs */\n            border: 1px solid #ccc;\n          }\n\n          button {\n            padding: 0.8rem 1.5rem;\n            font-size: 1rem;\n            border: none;\n            background-color: #388e3c; /* Green for action buttons */\n            color: white;\n            border-radius: 5px; /* Rounded edges */\n            cursor: pointer;\n            margin-top: 1rem;\n          }\n\n          button:hover {\n            background-color: #2e7d32; /* Slightly darker green for hover state */\n          }\n\n          table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 1.5rem;\n          }\n\n          table,\n          th,\n          td {\n            border: 1px solid #ccc; /* Light gray borders */\n          }\n\n          th,\n          td {\n            padding: 0.8rem;\n            text-align: center;\n          }\n\n          .totals {\n            margin-top: 1.5rem;\n          }\n\n          .totals div {\n            margin: 0.5rem 0;\n            font-weight: bold;\n          }\n\n          .highlight {\n            color: #d84315; /* Red for highlighting critical information */\n            font-size: 1.2rem;\n          }\n\n\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Farmer Billing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Farmer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Farmer Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Place:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Place\",\n          value: place,\n          onChange: e => setPlace(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: updateDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Total Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter Total Quantity\",\n          onChange: e => setTotalQuantity(parseFloat(e.target.value) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-rows\",\n          children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              gap: \"1rem\",\n              marginBottom: \"1rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Price (Amount)\",\n              value: row.price,\n              onChange: e => handleInputChange(index, \"price\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Quantity\",\n              value: row.quantity,\n              onChange: e => handleInputChange(index, \"quantity\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addRow,\n          children: \"+ Add Price & Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Advance Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter Advance Amount\",\n          onChange: e => setAdvance(parseFloat(e.target.value) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateBill,\n          children: \"Generate Bill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this), billDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bill-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Billing Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: billDetails.rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totals\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Total Amount: \\u20B9\", billDetails.totalAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Commission (10%): \\u20B9\", billDetails.commission]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Labour Wages (\\u20B95 x \", totalQuantity, \"): \\u20B9\", billDetails.labourWages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Advance Paid: \\u20B9\", advance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"highlight\",\n            children: [\"Remaining Amount: \\u20B9\", billDetails.remaining]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateDatabase,\n          style: {\n            marginTop: \"20px\",\n            backgroundColor: \"#1e88e5\"\n          },\n          children: \"Update Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerBilling, \"YgWrdD7mnGMtmkWUn7fqrZhWwik=\");\n_c = FarmerBilling;\nexport default FarmerBilling;\nvar _c;\n$RefreshReg$(_c, \"FarmerBilling\");","map":{"version":3,"names":["React","Fragment","useState","jsxDEV","_jsxDEV","FarmerBilling","_s","rows","setRows","price","quantity","totalQuantity","setTotalQuantity","advance","setAdvance","billDetails","setBillDetails","name","setName","place","setPlace","date","setDate","totalAmount","addRow","handleInputChange","index","field","value","updatedRows","updateDate","e","temp","target","year","month","day","split","reversedDate","generateBill","labourWages","calculatedRows","map","priceNum","parseFloat","quantityNum","total","commission","Math","floor","remaining","updateDatabase","rate","row","parseInt","amount","fetch","process","env","REACT_APP_API_URI","seller","_id","method","body","JSON","stringify","headers","then","res","ok","Error","json","data","setNotification","setTimeout","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","notification","className","type","placeholder","onChange","style","display","gap","marginBottom","onClick","marginTop","backgroundColor","_c","$RefreshReg$"],"sources":["D:/projects/Sales Management System/frontend/src/pages/farmerBilling.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n\r\nfunction FarmerBilling() {\r\n  const [rows, setRows] = useState([{ price: \"\", quantity: \"\" }]);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [advance, setAdvance] = useState(0);\r\n  const [billDetails, setBillDetails] = useState(null);\r\n  const [name,setName] = useState(\"\");\r\n  const [place,setPlace] = useState(\"\");\r\n  const [date,setDate] = useState(\"\");\r\n  let totalAmount = 0;\r\n  const addRow = () => {\r\n    setRows([...rows, { price: \"\", quantity: \"\" }]);\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index][field] = value;\r\n    setRows(updatedRows);\r\n  };\r\n  function updateDate(e){\r\n    const temp=e.target.value;\r\n    const [year, month, day] = temp.split(\"-\");\r\n    const reversedDate = `${day}-${month}-${year}`;\r\n    setDate(reversedDate);\r\n  }\r\n\r\n  const generateBill = () => {\r\n\r\n    let labourWages = 5 * totalQuantity;\r\n\r\n    const calculatedRows = rows.map(({ price, quantity }) => {\r\n      const priceNum = parseFloat(price) || 0;\r\n      const quantityNum = parseFloat(quantity) || 0;\r\n      const total = priceNum * quantityNum;\r\n      totalAmount += total;\r\n      return { price: priceNum, quantity: quantityNum, total };\r\n    });\r\n\r\n    const commission = Math.floor(totalAmount / 10);\r\n    const remaining = totalAmount - (commission + labourWages + advance);\r\n\r\n    setBillDetails({\r\n      rows: calculatedRows,\r\n      totalAmount,\r\n      commission,\r\n      labourWages,\r\n      remaining,\r\n    });\r\n  };\r\n  function updateDatabase(){\r\n    const rate = billDetails.rows.map(row => parseInt(row.price, 10));\r\n    const quantity = billDetails.rows.map(row => parseInt(row.quantity, 10));\r\n    const amount=totalAmount;\r\n    fetch(`${process.env.REACT_APP_API_URI}/sellers/pay/${seller._id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({ name,place,date,amount,quantity,rate,totalQuantity,advance }),\r\n      headers: {\r\n          \"Content-Type\": \"application/json; charset=UTF-8\"\r\n      }\r\n    })\r\n    .then(res => {\r\n        if (!res.ok) throw new Error('Failed to update');\r\n        return res.json();\r\n    })\r\n    .then(data => {\r\n        setNotification(\"Amount updated successfully!\");\r\n        setTimeout(() => setNotification(''), 3000);\r\n    })\r\n    .catch(err => {\r\n        setNotification(\"Failed to update.\");\r\n        setTimeout(() => setNotification(''), 3000);\r\n    });\r\n  }\r\n  return (\r\n    <Fragment>\r\n        <style>{`\r\n            body {\r\n            font-family: 'Segoe UI', sans-serif;\r\n            background-color: #f1f8e9; /* Soft green background */\r\n            margin: 0;\r\n            padding: 2rem;\r\n          }\r\n\r\n          h1 {\r\n            text-align: center;\r\n            color: #33691e; /* Dark green for the main header */\r\n            margin-bottom: 2rem;\r\n          }\r\n\r\n          .form-section {\r\n            max-width: 800px;\r\n            background: white;\r\n            padding: 2rem;\r\n            margin: auto;\r\n            margin-bottom: 2rem;\r\n            border-radius: 10px; /* Rounded edges */\r\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1); /* Subtle shadow effect */\r\n          }\r\n\r\n          label {\r\n            display: block;\r\n            margin: 1rem 0 0.3rem;\r\n            font-weight: bold;\r\n            color: #333; /* Dark text for labels */\r\n          }\r\n\r\n          input[type=\"text\"],\r\n          input[type=\"number\"],\r\n          input[type=\"date\"] {\r\n            width: 100%;\r\n            padding: 0.6rem;\r\n            margin-top: 5px;\r\n            border-radius: 5px; /* Rounded edges for inputs */\r\n            border: 1px solid #ccc; /* Neutral border color */\r\n            font-size: 1rem;\r\n          }\r\n\r\n          .price-rows {\r\n            margin-top: 1rem;\r\n          }\r\n\r\n          .price-rows div {\r\n            display: flex;\r\n            gap: 1rem;\r\n            margin-bottom: 1rem;\r\n          }\r\n\r\n          .price-rows input {\r\n            flex: 1;\r\n            padding: 0.6rem;\r\n            border-radius: 5px; /* Rounded edges for inputs */\r\n            border: 1px solid #ccc;\r\n          }\r\n\r\n          button {\r\n            padding: 0.8rem 1.5rem;\r\n            font-size: 1rem;\r\n            border: none;\r\n            background-color: #388e3c; /* Green for action buttons */\r\n            color: white;\r\n            border-radius: 5px; /* Rounded edges */\r\n            cursor: pointer;\r\n            margin-top: 1rem;\r\n          }\r\n\r\n          button:hover {\r\n            background-color: #2e7d32; /* Slightly darker green for hover state */\r\n          }\r\n\r\n          table {\r\n            width: 100%;\r\n            border-collapse: collapse;\r\n            margin-top: 1.5rem;\r\n          }\r\n\r\n          table,\r\n          th,\r\n          td {\r\n            border: 1px solid #ccc; /* Light gray borders */\r\n          }\r\n\r\n          th,\r\n          td {\r\n            padding: 0.8rem;\r\n            text-align: center;\r\n          }\r\n\r\n          .totals {\r\n            margin-top: 1.5rem;\r\n          }\r\n\r\n          .totals div {\r\n            margin: 0.5rem 0;\r\n            font-weight: bold;\r\n          }\r\n\r\n          .highlight {\r\n            color: #d84315; /* Red for highlighting critical information */\r\n            font-size: 1.2rem;\r\n          }\r\n\r\n\r\n      `}</style>\r\n      {notification && (\r\n            <div className=\"top-notification\">\r\n                {notification}\r\n            </div>\r\n        )}\r\n    <div>\r\n      <h1>Farmer Billing</h1>\r\n\r\n      <div className=\"form-section\">\r\n        <label>Farmer Name:</label>\r\n        <input type=\"text\" placeholder=\"Enter Farmer Name\" value={name} onChange={(e)=>setName(e.target.value)}/>\r\n\r\n        <label>Place:</label>\r\n        <input type=\"text\" placeholder=\"Enter Place\" value={place} onChange={(e)=>setPlace(e.target.value)}/>\r\n        <input type=\"date\" onChange={updateDate}/>\r\n\r\n        <label>Total Quantity:</label>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter Total Quantity\"\r\n          onChange={(e) => setTotalQuantity(parseFloat(e.target.value) || 0)}\r\n        />\r\n\r\n        <div className=\"price-rows\">\r\n          {rows.map((row, index) => (\r\n            <div key={index} style={{ display: \"flex\", gap: \"1rem\", marginBottom: \"1rem\" }}>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Price (Amount)\"\r\n                value={row.price}\r\n                onChange={(e) => handleInputChange(index, \"price\", e.target.value)}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Quantity\"\r\n                value={row.quantity}\r\n                onChange={(e) => handleInputChange(index, \"quantity\", e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <button onClick={addRow}>+ Add Price & Quantity</button>\r\n\r\n        <label>Advance Amount:</label>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter Advance Amount\"\r\n          onChange={(e) => setAdvance(parseFloat(e.target.value) || 0)}\r\n        />\r\n\r\n        <button onClick={generateBill}>Generate Bill</button>\r\n      </div>\r\n\r\n      {billDetails && (\r\n        <div className=\"bill-section\">\r\n          <h2>Billing Details</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {billDetails.rows.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td>{row.price}</td>\r\n                  <td>{row.quantity}</td>\r\n                  <td>{row.total}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"totals\">\r\n            <div>Total Amount: ₹{billDetails.totalAmount}</div>\r\n            <div>Commission (10%): ₹{billDetails.commission}</div>\r\n            <div>\r\n              Labour Wages (₹5 x {totalQuantity}): ₹{billDetails.labourWages}\r\n            </div>\r\n            <div>Advance Paid: ₹{advance}</div>\r\n            <div className=\"highlight\">\r\n              Remaining Amount: ₹{billDetails.remaining}\r\n            </div>\r\n          </div>\r\n          <button onClick={updateDatabase} style={{ marginTop: \"20px\", backgroundColor: \"#1e88e5\" }}>\r\n            Update Database\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FarmerBilling;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}